{"version":3,"sources":["js/base/breakpoints.ts","js/components/Heading/styles.ts","js/base/colours.ts","js/components/Heading/index.tsx","js/components/Tile.tsx","js/components/Card/styles.ts","js/components/Card/index.tsx","js/components/Loading.tsx","js/components/Grid/styles.ts","js/components/Grid/index.tsx","js/pages/Home.tsx","js/components/Search.tsx","js/pages/ListingProducts.tsx","js/App.tsx","index.tsx"],"names":["breakpoints","ms","ml","ts","tl","ls","lxl","ds","dm","dl","dxl","mediaQueries","key","style","Heading","styled","div","HeadingLink","a","HeadingText","h1","title","href","Tile","id","className","to","Card","li","CardImage","img","CardTitle","p","CardDescription","CardPrice","image","description","price","src","alt","toFixed","Loading","Grid","modifier","children","Home","useState","products","setProducts","isLoading","setIsLoading","useEffect","fetch","then","response","json","data","map","product","Search","placeholder","value","setSearchTerm","type","onChange","event","target","ListingProducts","props","selectedOption","setSelectedOption","searchTerm","results","filter","toLowerCase","includes","toLocaleLowerCase","match","params","category_id","htmlFor","sort","b","options","label","classNamePrefix","GlobalStyle","createGlobalStyle","normalize","App","exact","path","component","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3dbf3b1.chunk.js","sourcesContent":["export const breakpoints = {\n  ms: 480,\n  ml: 600,\n  ts: 720,\n  tl: 960,\n  ls: 1024,\n  lxl: 1366,\n  ds: 1400,\n  dm: 1500,\n  dl: 1800,\n  dxl: 1920,\n}\n\nexport const mediaQueries = (key: keyof typeof breakpoints) => {\n  return (style: TemplateStringsArray | String) =>\n    `@media (min-width: ${breakpoints[key]}px) { ${style} }`\n}\n","import styled from 'styled-components'\nimport { BLACK, WHITE } from '../../base/colours'\nimport { mediaQueries } from '../../base/breakpoints'\n\nexport const Heading = styled.div`\n  background-color: ${BLACK};\n  text-align: center;\n  padding: 10px;\n\n  ${mediaQueries('ms')`\n    padding: 40px;\n  `}\n`\n\nexport const HeadingLink = styled.a`\n  text-decoration: none;\n  color: ${WHITE};\n`\n\nexport const HeadingText = styled.h1`\n  color: ${WHITE};\n  font-size: 30px;\n  margin: 0;\n\n  ${mediaQueries('ms')`\n    font-size: 40px;\n  `}\n`\n","export const BLACK = '#000000'\nexport const WHITE = '#FFFFFF'\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport interface Props {\n  title: string\n}\n\nexport default function Heading({ title }: Props) {\n  return (\n    <Styles.Heading>\n      <Styles.HeadingLink href='/fake-store'>\n        <Styles.HeadingText>{title}</Styles.HeadingText>\n      </Styles.HeadingLink>\n    </Styles.Heading>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport interface TileProps {\n  title: string\n  id: string\n}\n\nconst Tile = ({ title, id }: TileProps) => {\n  return (\n    <Link\n      className='c-tile'\n      to={'/fake-store/category/' + id}\n      title={'Click here to view the projects in ' + id}\n    >\n      <p className='c-tile__title'>{title}</p>\n    </Link>\n  )\n}\n\nexport default Tile\n","import styled from 'styled-components'\nimport { BLACK } from '../../base/colours'\n\nexport const Card = styled.li`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n  max-width: 400px;\n  padding: 20px;\n  list-style: none;\n  border: 1px solid ${BLACK};\n`\n\nexport const CardImage = styled.img`\n  max-width: 100%;\n  max-height: 200px;\n`\n\nexport const CardTitle = styled.p`\n  margin: 30px 0;\n  font-size: 20px;\n  text-align: center;\n`\n\nexport const CardDescription = styled.p`\n  line-height: 1.2;\n  font-size: 18px;\n`\n\nexport const CardPrice = styled.p`\n  align-self: flex-start;\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\ntype CardProps = {\n  id: number\n  image: string\n  title: string\n  description: string\n  price: number\n}\n\nexport default function Card({\n  id,\n  image,\n  title,\n  description,\n  price,\n}: CardProps) {\n  function convertToPounds(number: number) {\n    return 'Â£' + number.toFixed(2)\n  }\n\n  return (\n    <Styles.Card key={id}>\n      <Styles.CardImage src={image} alt={title} />\n      <Styles.CardTitle>{title}</Styles.CardTitle>\n      <Styles.CardDescription>{description}</Styles.CardDescription>\n      <Styles.CardPrice>{convertToPounds(price)}</Styles.CardPrice>\n    </Styles.Card>\n  )\n}\n","import React from 'react'\n\nconst Loading = (): JSX.Element => {\n  return (\n    <div className='l-container--loading'>\n      <div className='c-loading'></div>\n    </div>\n  )\n}\n\nexport default Loading\n","import styled from 'styled-components'\nimport { mediaQueries } from '../../base/breakpoints'\nimport { Props } from './index'\n\nexport const Grid = styled.div<Props>`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 200px));\n  grid-gap: 40px;\n  justify-content: center;\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 10px;\n\n  ${mediaQueries('ms')`\n    padding: 20px;\n  `}\n\n  ${({ modifier }) =>\n    modifier === 'card' &&\n    `\n      grid-template-columns: repeat(auto-fill, minmax(400px, 400px));\n      max-width: 3000px;\n    `}\n`\n","import React from 'react'\nimport * as Styles from './styles'\n\nexport interface Props {\n  children: JSX.Element | JSX.Element[]\n  modifier?: 'card'\n}\n\nexport default function Grid({ modifier, children }: Props) {\n  return <Styles.Grid modifier={modifier}>{children}</Styles.Grid>\n}\n","import React, { useState, useEffect } from 'react'\nimport Tile from '../components/Tile'\nimport Card from '../components/Card/index'\nimport Loading from '../components/Loading'\nimport Grid from '../components/Grid/index'\n\nconst Home = (): JSX.Element => {\n  // State to store the first four products returned from the API\n  const [products, setProducts] = useState<any[]>([])\n  // State to signal if the application is loading something\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    // Fetching the first 4 products from the api and then storing them in state\n    fetch('https://fakestoreapi.com/products?limit=4')\n      // Storing the response in json format\n      .then((response) => response.json())\n      // Setting the products state to the data returned\n      .then((data) => setProducts(data))\n      // Once all the data has been fetched, set the loading state to false\n      .then(() => setIsLoading(false))\n  }, [])\n\n  return (\n    <div className='l-page'>\n      <h1 className='l-page__title'>Welcome to the Fake Store</h1>\n      <h2 className='l-page__description'>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n        mollit anim id est laborum.\n      </h2>\n      <h3 className='l-page__description--heading'>\n        View some of our products\n      </h3>\n      <div className='l-grid'>\n        <Tile title='Mens Clothing' id='men clothing' />\n        <Tile title='Womens Clothing' id='women clothing' />\n        <Tile title='Jewelery' id='jewelery' />\n        <Tile title='Electronics' id='electronics' />\n      </div>\n      <h3 className='l-page__description--heading'>\n        Here are some of our featured products\n      </h3>\n      {!isLoading ? (\n        <Grid modifier='card'>\n          {products.map((product) => (\n            <Card\n              id={product.id}\n              image={product.image}\n              title={product.title}\n              description={product.description}\n              price={product.price}\n            />\n          ))}\n        </Grid>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\n\ntype SearchProps = {\n  placeholder: string\n  value: string\n  setSearchTerm: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst Search = ({ placeholder, value, setSearchTerm }: SearchProps) => {\n  const handleChange = (event: any) => {\n    setSearchTerm(event.target.value)\n  }\n\n  return (\n    <input\n      type='text'\n      placeholder={placeholder}\n      className='c-input'\n      value={value}\n      onChange={handleChange}\n    />\n  )\n}\n\nexport default Search","import React, { useState, useEffect } from 'react'\nimport Loading from '../components/Loading'\nimport Card from '../components/Card/index'\nimport Search from '../components/Search'\nimport Select from 'react-select'\nimport Grid from '../components/Grid/index'\n\nconst ListingProducts = (props: any): JSX.Element => {\n  // State to store all the products returned from the API\n  const [products, setProducts] = useState<any[]>([])\n  // State to store the option the user has selected in the dropdown\n  const [selectedOption, setSelectedOption] = useState(null)\n  // State to signal if the application is loading something\n  const [isLoading, setIsLoading] = useState(true)\n  //\n  const [searchTerm, setSearchTerm] = useState('')\n\n  const results = products.filter((product) =>\n    product.title.toLowerCase().includes(searchTerm.toLocaleLowerCase()),\n  )\n\n  // Storing the current page id in a variable\n  const id = props.match.params.category_id\n\n  // The options which will be used in the select dropdown to sort the data\n  const options = [\n    { value: 'ascending', label: 'High to Low' },\n    { value: 'decending', label: 'Low to High' },\n  ]\n\n  useEffect(() => {\n    fetch(`https://fakestoreapi.com/products/category/${id}`)\n      .then((response) => response.json())\n      .then((data) => setProducts(data))\n      .then(() => setIsLoading(false))\n  }, [id])\n\n  const onHandleChange = (selectedOption: any) => {\n    setSelectedOption(selectedOption)\n    if (selectedOption.value === 'decending') {\n      setProducts([...products].sort((a, b) => (a.price > b.price ? 1 : -1)))\n    } else {\n      setProducts([...products].sort((a, b) => (a.price < b.price ? 1 : -1)))\n    }\n  }\n\n  return (\n    <div className='l-page'>\n      <h2 className='c-title'>{id}</h2>\n      <Search\n        placeholder='Search Movies...'\n        value={searchTerm}\n        setSearchTerm={setSearchTerm}\n      />\n      <label className='c-label' htmlFor='priceSort'>\n        Sort Price\n      </label>\n      <Select\n        value={selectedOption}\n        onChange={onHandleChange}\n        options={options}\n        className='c-select'\n        classNamePrefix='c-select'\n      />\n      {!isLoading ? (\n        <Grid>\n          {results.map((product) => (\n            <Card\n              id={product.id}\n              image={product.image}\n              title={product.title}\n              description={product.description}\n              price={product.price}\n            />\n          ))}\n        </Grid>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  )\n}\n\nexport default ListingProducts\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Heading from './components/Heading/index'\nimport Home from './pages/Home'\nimport ListingProducts from './pages/ListingProducts'\nimport { createGlobalStyle } from 'styled-components'\nimport { normalize } from 'styled-normalize'\n\nconst GlobalStyle = createGlobalStyle`\n    ${normalize}\n\n    * {\n      font-family: 'Poppins', sans-serif;\n    }\n`\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <Heading title='Fake Store' />\n      <Switch>\n        <Route exact path='/fake-store' component={Home} />\n        <Route\n          exact\n          path='/fake-store/category/:category_id'\n          component={ListingProducts}\n        />\n      </Switch>\n      <GlobalStyle />\n      <link\n        href='https://fonts.googleapis.com/css?family=Poppins&display=swap'\n        rel='stylesheet'\n      />\n    </BrowserRouter>\n  )\n}\n\nexport default App\n\n// TODO:\n// - Style card component\n// - Add in search bar for products\n// - Admin dashboard\n// - Make dropdown component\n// - Add cart number indicator\n// - Add more comments\n// - Format price\n// - Update readme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './scss/app.scss'\nimport App from './js/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}